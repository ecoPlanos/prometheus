version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  front-tier:
    ipam:
      config:
        - subnet: 192.168.242.128/29
  back-tier:
    ipam:
      config:
        - subnet: 192.168.242.136/28

services:

  prometheus:
    image: prom/prometheus:v2.36.2
    # image: prom/prometheus:v2.38.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
#      - pushgateway:pushgateway
    depends_on:
      - cadvisor
#      - pushgateway
    networks:
      - back-tier
    restart: always
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      # - --collector.filesystem.ignored-mount-points
      # - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
      # - '--path.procfs=/host/proc'
      # - '--path.rootfs=/rootfs'
      # - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.systemd'
      - '--collector.processes'
      # - '--no-collector.arp'
      # - '--no-collector.bcache'
      # - '--no-collector.bonding'
      # - '--no-collector.btrfs'
      # - '--no-collector.conntrack'
      # # - '--no-collector.cpu'
      # - '--no-collector.cpufreq'
      # - '--no-collector.diskstats'
      # - '--no-collector.dmi'
      # - '--no-collector.edac'
      # - '--no-collector.entropy'
      #
      # - '--no-collector.fibrechannel'
      # - '--no-collector.filefd'
      # # - '--no-collector.filesystem'
      # # - '--no-collector.hwmon'
      # - '--no-collector.infiniband'
      # - '--no-collector.ipvs'
      # - '--no-collector.loadavg'
      # - '--no-collector.mdadm'
      #   #- '--no-collector.meminfo'
      #   #- '--no-collector.netclass'
      # - '--no-collector.netdev'
      # - '--no-collector.netstat'
      # - '--no-collector.nfs'
      # - '--no-collector.nfsd'
      # - '--no-collector.nvme'
      # - '--no-collector.os'
      #   #- '--no-collector.powersupplyclass'
      # - '--no-collector.pressure'
      # - '--no-collector.rapl'
      # - '--no-collector.schedstat'
      # - '--no-collector.sockstat'
      # - '--no-collector.softnet'
      # - '--no-collector.stat'
      # - '--no-collector.tapestats'
      # - '--no-collector.textfile'
      #
      # - '--no-collector.thermal_zone'
      # - '--no-collector.time'
      # - '--no-collector.timex'
      # - '--no-collector.udp_queues'
      # - '--no-collector.uname'
      # - '--no-collector.vmstat'
      # - '--no-collector.xfs'
      # - '--no-collector.zfs'
      # - '--no-collector.boottime'
      # - '--no-collector.exec'
      # - '--no-collector.thermal'
      # - '--help'

    ports:
      - 9100:9100
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: always

#  pushgateway:
#    image: prom/pushgateway
#    restart: always
#    expose:
#      - 9091
#    ports:
#      - "9091:9091"
#    networks:
#      - back-tier

  rathole:
    build: rathole
    container_name: rathole
    depends_on:
      - grafana
    restart: always
    volumes:
      - ./rathole/client.toml:/app/client.toml
    command: "./rathole -c /app/client.toml"
    network_mode: host
